openapi: 3.0.1
info:
  title: Hibat App API
  description: This API is designed for both Web and Mobile app.
  version: 1.0.0

servers:
  - url: https://staging.hibatapp.com/api/v1/
  - url: https://localhost/hibat-app/api/v1/

tags:
  - name: home

paths:
  /home:
    get:
      tags:
        - home
      summary: Get home page data
      parameters:
        - name: lang
          in: query
          schema:
            type: string
            maxLength: 2
            example: en
            default: en
            pattern: ^[a-z]{2}$
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                additionalProperties: false
                type: object
                properties:
                  sliders:
                    maxItems: 5
                    type: array
                    items:
                      additionalProperties: false
                      anyOf:
                        - $ref: "#/components/schemas/slider"
  /user:
    put:
      security:
        - bearerAuth: []
      tags:
        - user
      summary: Update user info
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - fullName
              properties:
                fullName:
                  type: string
                  maxLength: 50
                  pattern: ^.{3,50}$
              example:
                fullName: "John Doe"
              additionalProperties: false
      responses:
        200:
          description: Success
        400:
          description: Missing data
        401:
          description: This request need's a valid user token          
    get:
      security:
        - bearerAuth: []
      tags:
        - user
      summary: Get user info
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        401:
          description: Wrong login info
    post:
      tags:
        - user
      summary: User sign up
      operationId: userSingUp
      requestBody:
        required: true
        content:
          "application/x-www-form-urlencoded":
            schema:
              additionalProperties: false
              type: object
              properties:
                fullName:
                  type: string
                  maxLength: 50
                  pattern: ^.{1,50}$
                  example: John Doe
                countryId:
                  type: integer
                  format: int32
                  minimum: 1
                  maximum: 200
                  example: 10
                mobile:
                  type: string
                  maxLength: 14
                  pattern: ^[0-9]{8,14}$
                  example: "00111222000000"
                password:
                  type: string
                  minLength: 8
                  maxLength: 50
                  pattern: ^.{8,50}$
                  example: "Ab@123*/"
              required:
                - fullName
                - countryId
                - mobile
                - password
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                additionalProperties: false
                type: object
                properties:
                  otpToken: 
                    type: string
                    pattern: ^[0-9a-z]{32}$
                    maxLength: 32
                    example: "a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1"
        400:
          description: missing data
        422:
          description: mobile number already exists
        452:
          description: this app is not available in this country yet

  /wishlist/{productId}:
    delete:
      security:
        - bearerAuth: []
      tags:
        - wishlist
      summary: Deletes a from Wishlist
      description: "Delete from Wishlist"
      parameters:
        - name: "productId"
          in: path
          required: true
          schema:
            type: integer
            maximum: 999999
            minimum: 0
            format: int32
      responses:
        "200":
          description: "success"
        "401":
          description: "This request need's a valid user token"
        "404":
          description: "No such item"
components:
  responses:
    notFound:
      description: Item not found
      content:
        application/json:
          schema:
            additionalProperties: false
            type: object
            properties:
              code:
                type: integer
                example: 404
                format: int32
                maximum: 404
                minimum: 404
              message:
                type: string
                example: Item not found
                maxLength: 250
                pattern: ^[0-9A-Za-z\. ]+$

  schemas:
    slider:
      additionalProperties: false
      type: object
      properties:
        picUrl:
          type: string
          example: "https://www.domain.com/path/photo.png"
          pattern: ^[0-9a-z:/\.]+$
          maxLength: 250

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

/addToWishlist:
  put:
    tags:
    - user
    summary: Add to wishlist
    description: "Add to wishlist"
    responses:
      200:
        description: success
      401:
        description: this request need's a valid user token
      404:
        description: no such item
  components:
    responses:
      notFound:
        description: Item not found
        content:
          application/json:
            schema:
              additionalProperties: false
              type: object
              properties:
                code:
                  type: integer
                  example: 404
                  format: int32
                  maximum: 404
                  minimum: 404
                message:
                  type: string
                  example: Item not found
                  maxLength: 250
                  pattern: ^[0-9A-Za-z\. ]+$

      schemes:
        slider:
          additionalProperties: false
          type: object
          properties:
            picUrl:
              type: string
              example: ""
              pattern: ^[0-9a-z:/\. ]+$
              maxLength: 250